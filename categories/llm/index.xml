<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LLM on Defios Lab.</title>
    <link>https://DefiosLab.github.io/categories/llm/</link>
    <description>Recent content in LLM on Defios Lab.</description>
    <generator>Hugo</generator>
    <language>jp</language>
    <lastBuildDate>Thu, 16 May 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://DefiosLab.github.io/categories/llm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ゲームの世界にローカルLLMを！！LlamaCppUnityを公開しました</title>
      <link>https://DefiosLab.github.io/post/release_llamacppunity/</link>
      <pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>
      <guid>https://DefiosLab.github.io/post/release_llamacppunity/</guid>
      <description>&lt;h1 id=&#34;1はじめに&#34;&gt;1．はじめに&lt;/h1&gt;&#xA;&lt;p&gt;近年、LLM（Large Language Models）の利活用が進んでおり、その応用範囲は広がっています。その中でゲーム開発において、LLMを活用したいと考える方も多いと思います。例えばリアルなNPCやプレイヤーの行動に応じた自由度の高い反応を実現したい等。&lt;/p&gt;&#xA;&lt;p&gt;LLMをアプリに組み込む場合、ChatGPTを筆頭としたクラウドLLMと通信して行うのが主流になっていますが、生成量に応じた課金が必要でゲームへの導入には障壁があります。&lt;/p&gt;&#xA;&lt;p&gt;そこで、デバイス内でLLMの推論処理を完結するRuntimeライブラリ、 &lt;strong&gt;LlamaCppUnity&lt;/strong&gt;を公開しました。&lt;/p&gt;&#xA;&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://github.com/DefiosLab/LlamaCppUnity&#34; data-iframely-url=&#34;//iframely.net/O8gKEAS?card=small&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//iframely.net/embed.js&#34;&gt;&lt;/script&gt;&#xA;&lt;br&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;2-llamacppunity&#34;&gt;2. LlamaCppUnity&lt;/h1&gt;&#xA;&lt;p&gt;LlamaCppUnityは&lt;a href=&#34;https://github.com/ggerganov/llama.cpp&#34;&gt;llama.cpp&lt;/a&gt;をバックエンドとしたLLM Runtimeライブラリです。&lt;br&gt;&#xA;llama.cppの機能をそのまま使えるので、&lt;strong&gt;量子化やGPGPU/SIMD実行, クロスプラットフォーム(Windows, Mac, Android)に対応&lt;/strong&gt;しています。&lt;br&gt;&#xA;MIT Licenseで公開しているので再配布・改造も自由です。(Contribution大歓迎です！)&lt;/p&gt;&#xA;&lt;p&gt;↓は本ライブラリの紹介動画です。&lt;/p&gt;&#xA;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/YAPNvy4gD-Y?si=mJwg1lKqafEXValI&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;こちらの動画内で使われているアプリは今回デモ用に作った&lt;strong&gt;ユニティちゃんと簡単な会話ができるアプリ&lt;/strong&gt;です。&lt;br&gt;&#xA;以下に公開していますので興味がある方はぜひ触ってみてください！（Windows, Android対応）&lt;br&gt;&#xA;モデルは&lt;code&gt;ELYZA-japanese-Llama-2-7bの2bit量子化モデル&lt;/code&gt;を使っています。&lt;/p&gt;&#xA;&lt;div class=&#34;iframely-embed&#34;&gt;&lt;div class=&#34;iframely-responsive&#34; style=&#34;height: 140px; padding-bottom: 0;&#34;&gt;&lt;a href=&#34;https://github.com/DefiosLab/LlamaCppUnity_DEMO&#34; data-iframely-url=&#34;//iframely.net/qhd6SYA?card=small&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script async src=&#34;//iframely.net/embed.js&#34;&gt;&lt;/script&gt;&#xA;&lt;br&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;3-サンプルコード&#34;&gt;3. サンプルコード&lt;/h1&gt;&#xA;&lt;p&gt;推論を動かすには以下のコードで簡単に実行できます。Token毎に生成結果を返す&lt;code&gt;Stream&lt;/code&gt;にも対応しています。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; LlamaCppUnity;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;LlamaSample&lt;/span&gt; : MonoBehaviour&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; Start()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Llama test = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Llama(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;path/to/gguf&amp;gt;&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; result = test.Run(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Q: Name the planets in the solar system? A: &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//Output example: &amp;#34;1. Venus, 2. Mercury, 3. Mars,&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//Stream Mode&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; text &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; test.RunStream(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Q: Name the planets in the solar system? A: &amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Debug.Log(text);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;後ほどデモアプリのソースコードも公開予定です。（アセットをおしゃれにした結果、ライセンス上そのままソースを公開できないアプリになってしまいました&amp;hellip;推論部分だけを抽出したサンプルアプリにする予定です。）&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
